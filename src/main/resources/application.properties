spring.application.name=learn

# for mysql
spring.datasource.url=jdbc:mysql://localhost:3306/testdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Smx@2025
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA config
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always

# debug when data is show incorrectly for JPA
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=trues
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# MyBatis Config (optional if you use XML mappers)
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.type-aliases-package=com.cocosun.learn.model.students

# Enable profiles, availiable value [dev, prod], details go the associate application-*.properties files
spring.profiles.active=prod

# 这是 MySQL 连接报错，通常是因为你用的 MySQL 8 以上版本，连接字符串里没有配置允许公钥检索（Public Key Retrieval），
# 导致客户端无法进行密码加密认证
# allowPublicKeyRetrieval=true
spring.thymeleaf.cache=false

# application.properties
spring.redis.host=localhost
spring.redis.port=6379

# Redis key prefix for JWT tokens
jwt.redis.key.prefix=learn.auth:jwt:

# Redis key expiration in milliseconds (e.g., 2 hours)
jwt.redis.ttl=7200000

# JWT secret key (you can use a Base64 encoded string or a secure key)
jwt.secret=my-very-secret-key-change-this-by-coco-sun

# JWT expiration time in milliseconds (e.g., 2 hours)
jwt.expiration.ms=7200000

# Name of the HttpOnly cookie
jwt.cookie.name=AUTH-TOKEN








